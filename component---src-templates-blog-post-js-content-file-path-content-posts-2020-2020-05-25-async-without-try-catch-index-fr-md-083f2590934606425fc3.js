"use strict";(self.webpackChunkmaxpou_fr=self.webpackChunkmaxpou_fr||[]).push([[8345],{2426:function(n,e,a){a.r(e),a.d(e,{default:function(){return g}});var s=a(1151),t=a(7294);function o(n){const e=Object.assign({p:"p",span:"span",em:"em",strong:"strong",h2:"h2",a:"a",ul:"ul",li:"li"},(0,s.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(e.p,null,"Lorsque la fonctionnalit√© ",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">async/await</code>'}})," est sortie avec ECMAScript 2017, ca a litt√©ralement donn√© un\nbons gros coup de boost au promises (promesses). En deux mots, gr√¢ce aux fonctions asynchrones\n(",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">async</code>'}}),"), on supprime l‚Äôeffet Pyramid of doom (",t.createElement(e.em,null,"a.k.a. Callback hell"),") li√© aux promises telles\nqu‚Äôelles avait ete definies en ECMAScript 2015 (ES6). Le code asynchrone est tout de suite plus\nfacile √† lire."),"\n",t.createElement(e.p,null,"Si votre application utilise des API, je suppose que vous √©crivez beaucoup de code comme ceci:"),"\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">try</span> <span class="token punctuation">{</span>\n  <span class="token keyword">const</span> response <span class="token operator">=</span> <span class="token keyword">await</span> http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'https://api.github.com/users/maxpou\'</span><span class="token punctuation">)</span>\n  <span class="token comment">// faire quelque chose avec response</span>\n<span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// gestion d\'erreur</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(e.p,null,"Mais bon, je n‚Äôai jamais √©t√© grand fan des blocs try‚Ä¶catch. Quand je code, ",t.createElement(e.strong,null,"j‚Äôessaye de toujours\ngarder un niveau d‚Äôindentation le plus petit possible"),". Voyons comment retirer ce bloc."),"\n",t.createElement(e.h2,{id:"le-wrapper",style:{position:"relative"}},t.createElement(e.a,{href:"#le-wrapper","aria-label":"le wrapper permalink",className:"anchor before"},t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Le wrapper"),"\n",t.createElement(e.p,null,"Tout d‚Äôabord, on il nous faudra cr√©er un ‚Äúwrapper‚Äù. Une fonction utilitaire que l‚Äôon placera ensuite\ndans un espace partag√©. Le voici :"),"\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// utils/async-utils.js</span>\n<span class="token keyword">export</span> <span class="token keyword">function</span> <span class="token function">to</span><span class="token punctuation">(</span><span class="token parameter">promise</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token keyword">return</span> promise<span class="token punctuation">.</span><span class="token function">then</span><span class="token punctuation">(</span><span class="token parameter">data</span> <span class="token operator">=></span> <span class="token punctuation">[</span><span class="token keyword">null</span><span class="token punctuation">,</span> data<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">catch</span><span class="token punctuation">(</span><span class="token parameter">err</span> <span class="token operator">=></span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">]</span><span class="token punctuation">)</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(e.p,null,"Comme vous pouvez le voir, cette fonction retourne un tableau avec plusieurs valeurs possibles:"),"\n",t.createElement(e.ul,null,"\n",t.createElement(e.li,null,t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">null</code>'}})," ",t.createElement(e.strong,null,"et")," la valeur de la promesse resolue;"),"\n",t.createElement(e.li,null,"l‚Äôerreur de la promesse ",t.createElement(e.strong,null,"et")," ",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">null</code>'}}),"."),"\n"),"\n",t.createElement(e.p,null,"Maintenant si on reprend le premier bout de code, on peut retirer le ",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">try...catch</code>'}})," and le remplacer\npar :"),"\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token keyword">import</span> <span class="token punctuation">{</span> to <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'utils/async-utils\'</span>\n\n<span class="token keyword">const</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> response<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">to</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'https://api.github.com/users/maxpou\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span>\n\n<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>\n  <span class="token comment">// gestion d\'erreur</span>\n<span class="token punctuation">}</span>\n\n<span class="token comment">// faire quelque chose avec response</span></code></pre></div>'}}),"\n",t.createElement(e.p,null,"üéâ Et voil√†!"),"\n",t.createElement(e.h2,{id:"attention-nessayez-pas-de-destructurer",style:{position:"relative"}},t.createElement(e.a,{href:"#attention-nessayez-pas-de-destructurer","aria-label":"attention nessayez pas de destructurer permalink",className:"anchor before"},t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Attention, n‚Äôessayez pas de ‚Äúdestructurer‚Äù"),"\n",t.createElement(e.p,null,"Dans mon entreprise on utilise √©norm√©ment ce petit bout de code. Un jour, un de mes collegues a\nessaye de\n",t.createElement(e.a,{href:"https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Operators/Destructuring_assignment#Object_destructuring"},"‚Äúdestructurer‚Äù"),"\nl‚Äôobjet response pour economiser une ligne de code :"),"\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="js"><pre class="language-js"><code class="language-js"><span class="token comment">// ‚ö†Ô∏è this won\'t works! ‚ö†Ô∏è</span>\n<span class="token keyword">const</span> <span class="token punctuation">[</span>err<span class="token punctuation">,</span> <span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">to</span><span class="token punctuation">(</span>http<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">\'https://api.github.com/users/maxpou\'</span><span class="token punctuation">)</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(e.p,null,"En cas d‚Äôerreur, ce code ne marchera pas. On aura dans la console\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:"<code class=\"language-text\">Cannot read property 'data' of null</code>"}}),". En effet, si la promesse √©choue on retourne l‚Äôerreur et\n",t.createElement(e.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">null</code>'}}),". Et on ne peut pas destructurer cette deuxi√®me valeur, m√™me si on en a pas besoin !"))}var p=function(n){void 0===n&&(n={});const{wrapper:e}=Object.assign({},(0,s.ah)(),n.components);return e?t.createElement(e,n,t.createElement(o,n)):o(n)},c=a(4222),l=a(418),r=a(4529),u=a(7953),i=a(4849),d=a(5536),m=a(2404);function k(n){let{data:e,pageContext:a,children:s,location:o}=n;const p=e.post,{previous:k,next:g}=a;return t.createElement(c.Z,{location:o},t.createElement(d.Z,{title:p.frontmatter.title,description:p.frontmatter.description||p.excerpt,cover:p.frontmatter.cover&&p.frontmatter.cover.publicURL,imageShare:p.frontmatter.imageShare&&p.frontmatter.imageShare.publicURL,lang:p.frontmatter.language,translations:p.frontmatter.translations,path:p.frontmatter.slug,isBlogPost:!0}),t.createElement(r.Z,{heroImg:p.frontmatter.cover,title:p.frontmatter.title}),t.createElement(l.Z,null,t.createElement(u.Z,{post:p},s)),t.createElement(l.Z,{as:"aside"},t.createElement(m.Z,{slug:p.frontmatter.slug,title:p.frontmatter.title,redditPostId:p.frontmatter.redditPostId})),t.createElement(i.Z,{previous:k,next:g}))}function g(n){return t.createElement(k,n,t.createElement(p,n))}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-content-posts-2020-2020-05-25-async-without-try-catch-index-fr-md-083f2590934606425fc3.js.map