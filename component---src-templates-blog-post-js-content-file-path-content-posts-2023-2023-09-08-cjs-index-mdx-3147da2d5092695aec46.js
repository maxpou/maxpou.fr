"use strict";(self.webpackChunkmaxpou_fr=self.webpackChunkmaxpou_fr||[]).push([[3299],{4703:function(n,s,a){a.r(s),a.d(s,{default:function(){return k}});var e=a(1151),t=a(7294),o=a(4419);function p(n){const s=Object.assign({p:"p",ul:"ul",li:"li",span:"span",h2:"h2",a:"a",em:"em"},(0,e.ah)(),n.components);return t.createElement(t.Fragment,null,t.createElement(s.p,null,"I faced a problem recently. I have a reference data package which is an npm package that can be\nconsumed by two different projects:"),"\n",t.createElement(s.ul,null,"\n",t.createElement(s.li,null,"The frontend: a React application bundled with Vite.js, an ESM builder (with no CJS support)."),"\n",t.createElement(s.li,null,"The backend: a Nestjs application that only supports CommonJS."),"\n"),"\n",t.createElement(s.p,null,"Also, this package contains some big files inside. Bundling everything in one file is a big no-no."),"\n",t.createElement(o.Z,{title:"ðŸ’¡ ESM? CJS? Whatâ€™s that?"},t.createElement("p",null,"CommonJS (CJS) is the older and traditional way of dealing with JS dependencies."),t.createElement("p",null,"ESM (ECMAScript Modules) is the official standard format to package JavaScript.")),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="tsx"><pre class="language-tsx"><code class="language-tsx"><span class="token comment">// CommonJS (CJS)</span>\n<span class="token keyword">const</span> path <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">\'path\'</span><span class="token punctuation">)</span>\nmodule<span class="token punctuation">.</span>exports <span class="token operator">=</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span><span class="token string">\'index.html\'</span><span class="token punctuation">)</span>\n\n<span class="token comment">// ESM (ECMAScript Modules)</span>\n<span class="token keyword">import</span> path <span class="token keyword">from</span> <span class="token string">\'path\'</span>\n<span class="token keyword">export</span> <span class="token keyword">default</span> path<span class="token punctuation">.</span><span class="token function">extname</span><span class="token punctuation">(</span><span class="token string">\'index.html\'</span><span class="token punctuation">)</span></code></pre></div>'}}),"\n",t.createElement(s.h2,{id:"folder-structure",style:{position:"relative"}},t.createElement(s.a,{href:"#folder-structure","aria-label":"folder structure permalink",className:"anchor before"},t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Folder structure"),"\n",t.createElement(s.p,null,"Letâ€™s start with a classic file architecture:"),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="bash"><pre class="language-bash"><code class="language-bash">â”œâ”€â”€ dist\nâ”œâ”€â”€ src\nâ”‚   â”œâ”€â”€ function-a.ts\nâ”‚   â”œâ”€â”€ function-b.ts\nâ”‚   â””â”€â”€ index.ts\nâ”œâ”€â”€ package.json\nâ”œâ”€â”€ tsconfig.esm.json\nâ”œâ”€â”€ tsconfig.cjs.json\nâ””â”€â”€ README.md</code></pre></div>'}}),"\n",t.createElement(s.p,null,"Please note that everything under the ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">src/</code>'}})," folder import/export dependencies with the ES7 ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">import</code>'}}),"\n/ ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">export</code>'}})," keyword."),"\n",t.createElement(s.h2,{id:"librarys-packagejson",style:{position:"relative"}},t.createElement(s.a,{href:"#librarys-packagejson","aria-label":"librarys packagejson permalink",className:"anchor before"},t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Libraryâ€™s package.json"),"\n",t.createElement(s.p,null,"The solution I found is to have 2 folders under the ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">dist</code>'}})," folder:"),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="json"><pre class="language-json"><code class="language-json"><span class="token punctuation">{</span>\n  <span class="token property">"name"</span><span class="token operator">:</span> <span class="token string">"@maxpou/my-cool-package"</span><span class="token punctuation">,</span>\n  <span class="token property">"main"</span><span class="token operator">:</span> <span class="token string">"dist/cjs/index.js"</span><span class="token punctuation">,</span>\n  <span class="token property">"exports"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"require"</span><span class="token operator">:</span> <span class="token string">"./dist/cjs/index.js"</span><span class="token punctuation">,</span>\n    <span class="token property">"import"</span><span class="token operator">:</span> <span class="token string">"./dist/esm/index.js"</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token property">"files"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"README.md"</span><span class="token punctuation">,</span> <span class="token string">"dist"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token property">"scripts"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token property">"build"</span><span class="token operator">:</span> <span class="token string">"npm run build:cjs &amp;&amp; npm run build:esm"</span><span class="token punctuation">,</span>\n    <span class="token property">"build:cjs"</span><span class="token operator">:</span> <span class="token string">"tsc -p tsconfig.cjs.json"</span><span class="token punctuation">,</span>\n    <span class="token property">"build:esm"</span><span class="token operator">:</span> <span class="token string">"tsc -p tsconfig.esm.json"</span>\n  <span class="token punctuation">}</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(s.p,null,"You can see that I use the ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">exports</code>'}})," token. This allows the package owner to define multiple entry\npoints. A CommonJS system will use the index located in the ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">./dist/cjs/index.js</code>'}})," folder while an\nESM system will use the other index located in the ",t.createElement(s.em,null,"esm")," folder."),"\n",t.createElement(s.p,null,"By the way, you can do\n",t.createElement(s.a,{href:"https://nodejs.org/api/packages.html#conditional-exports"},"much more with the conditional exports"),"!"),"\n",t.createElement(s.h2,{id:"tsconfigjson-files",style:{position:"relative"}},t.createElement(s.a,{href:"#tsconfigjson-files","aria-label":"tsconfigjson files permalink",className:"anchor before"},t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"tsconfig.json files"),"\n",t.createElement(s.p,null,"I donâ€™t have one file but two."),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight has-highlighted-lines" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// tsconfig.esm.json</span>\n<span class="token punctuation">{</span>\n  <span class="token string-property property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">"target"</span><span class="token operator">:</span> <span class="token string">"esnext"</span><span class="token punctuation">,</span>\n<span class="gatsby-highlight-code-line">    <span class="token string-property property">"module"</span><span class="token operator">:</span> <span class="token string">"esnext"</span><span class="token punctuation">,</span></span><span class="gatsby-highlight-code-line">    <span class="token string-property property">"outDir"</span><span class="token operator">:</span> <span class="token string">"./dist/esm"</span><span class="token punctuation">,</span></span>    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string-property property">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/index.ts"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string-property property">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"node_modules"</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight has-highlighted-lines" data-language="jsx"><pre class="language-jsx"><code class="language-jsx"><span class="token comment">// tsconfig.cjs.json</span>\n<span class="token punctuation">{</span>\n  <span class="token string-property property">"compilerOptions"</span><span class="token operator">:</span> <span class="token punctuation">{</span>\n    <span class="token string-property property">"target"</span><span class="token operator">:</span> <span class="token string">"es2017"</span><span class="token punctuation">,</span>\n<span class="gatsby-highlight-code-line">    <span class="token string-property property">"module"</span><span class="token operator">:</span> <span class="token string">"commonjs"</span><span class="token punctuation">,</span></span><span class="gatsby-highlight-code-line">    <span class="token string-property property">"outDir"</span><span class="token operator">:</span> <span class="token string">"./dist/cjs"</span><span class="token punctuation">,</span></span>    <span class="token comment">// ...</span>\n  <span class="token punctuation">}</span><span class="token punctuation">,</span>\n  <span class="token string-property property">"include"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"src/index.ts"</span><span class="token punctuation">]</span><span class="token punctuation">,</span>\n  <span class="token string-property property">"exclude"</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">"node_modules"</span><span class="token punctuation">]</span>\n<span class="token punctuation">}</span></code></pre></div>'}}),"\n",t.createElement(s.p,null,"If your IDE or other tools need one named ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">tsconfig.json</code>'}}),", you can create a master one. Then the\nspecific tsconfig files can extend from it."),"\n",t.createElement(s.p,null,"Then you can ",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<code class="language-text">npm publish</code>'}})," and call it a day ðŸ¥³"),"\n",t.createElement(s.h2,{id:"usage",style:{position:"relative"}},t.createElement(s.a,{href:"#usage","aria-label":"usage permalink",className:"anchor before"},t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<svg aria-hidden="true" focusable="false" height="16" version="1.1" viewBox="0 0 16 16" width="16"><path fill-rule="evenodd" d="M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z"></path></svg>'}})),"Usage"),"\n",t.createElement(s.p,null,"Your package will be available in both ESM and CommonJS environments. Your users can use it without\nknowing thereâ€™s a separation."),"\n",t.createElement(s.span,{dangerouslySetInnerHTML:{__html:'<div class="gatsby-highlight" data-language="ts"><pre class="language-ts"><code class="language-ts"><span class="token comment">// ESM</span>\n<span class="token keyword">import</span> <span class="token punctuation">{</span> myFunction <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">\'my-cool-package\'</span>\n\n<span class="token comment">// CommonJS</span>\n<span class="token keyword">const</span> <span class="token punctuation">{</span> myFunction <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">require</span><span class="token punctuation">(</span><span class="token string">\'my-cool-package\'</span><span class="token punctuation">)</span></code></pre></div>'}}))}var l=function(n){void 0===n&&(n={});const{wrapper:s}=Object.assign({},(0,e.ah)(),n.components);return s?t.createElement(s,n,t.createElement(p,n)):p(n)},c=a(4222),r=a(418),i=a(4529),u=a(7953),d=a(4849),g=a(5536),m=a(2404);function h(n){let{data:s,pageContext:a,children:e,location:o}=n;const p=s.post,{previous:l,next:h}=a;return t.createElement(c.Z,{location:o},t.createElement(g.Z,{title:p.frontmatter.title,description:p.frontmatter.description||p.excerpt,cover:p.frontmatter.cover&&p.frontmatter.cover.publicURL,imageShare:p.frontmatter.imageShare&&p.frontmatter.imageShare.publicURL,lang:p.frontmatter.language,translations:p.frontmatter.translations,path:p.frontmatter.slug,isBlogPost:!0}),t.createElement(i.Z,{heroImg:p.frontmatter.cover,title:p.frontmatter.title}),t.createElement(r.Z,null,t.createElement(u.Z,{post:p},e)),t.createElement(r.Z,{as:"aside"},t.createElement(m.Z,{slug:p.frontmatter.slug,title:p.frontmatter.title,redditPostId:p.frontmatter.redditPostId})),t.createElement(d.Z,{previous:l,next:h}))}function k(n){return t.createElement(h,n,t.createElement(l,n))}},4419:function(n,s,a){var e=a(7294),t=a(5086);const o=t.default.aside.withConfig({displayName:"Info__MessageWrapper",componentId:"sc-1w6ti9r-0"})(["color:var(--color-grey500);box-sizing:border-box;background-color:#bfe2ff;border-left:5px solid #0165b7;margin:30px 0px;padding:20px;border-radius:0 8px 8px 0;a{color:var(--color-grey500);}"]),p=t.default.div.withConfig({displayName:"Info__MessageHeader",componentId:"sc-1w6ti9r-1"})(["font-weight:bold;& > svg{position:relative;top:5px;width:25px;height:25px;padding-right:5px;}"]);s.Z=n=>{let{children:s,title:a}=n;return e.createElement(o,null,a&&e.createElement(p,null,a),s)}}}]);
//# sourceMappingURL=component---src-templates-blog-post-js-content-file-path-content-posts-2023-2023-09-08-cjs-index-mdx-3147da2d5092695aec46.js.map