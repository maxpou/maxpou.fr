{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-posts-2019-2019-03-01-conventional-commits-git-conventional-commits-md-512b7127c37f92b1b1cc.js","mappings":"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","sources":["webpack://maxpou.fr/./content/posts/2019/2019-03-01-conventional-commits/git-conventional-commits.md","webpack://maxpou.fr/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    br: \"br\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Git is a very powerful tool installed on most of our machines. As developer, we use it every day.\\nBut, unfortunately, at first glance, this tool is not very developer friendly. That’s why a lot of\\npeople bypass the command line interface (CLI) with a graphical user interface (GUI).\", React.createElement(_components.br), \"\\n\", \"It’s like using a framework without knowing the language itself. It can be OK at the beginning but,\\nsooner or later you, you will have problems.\"), \"\\n\", React.createElement(_components.p, null, \"Let’s take an example:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ git log --oneline ./src/components/button/\\n\\ndaccff1f test should pass\\n3fff19f6 test should pass\\n5b998d9a add disabled property for button\\n06faab4d fix lint\\n186cce90 refactor button\\n4b99d91a fix spinner component\\n5b998d9a fix css\\n263288a5 test should pass\\nc3fb85af Create Button component</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"There’s might be nothing wrong for you with this log. Let me show you the issues I’ve found with\\nthis log:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"It’s hard to understand the Component’s history. We might repeat errors already fixed.\"), \"\\n\", React.createElement(_components.li, null, \"There are unnecessary commits which pollute logs and make history hard to read. Also,\\nfunctionalities like \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">git blame</code>\"\n    }\n  }), \" become irrelevant.\"), \"\\n\", React.createElement(_components.li, null, \"It seems that a feature was added by a few commits. Which commit should I include if I want to\\nrevert this operation?\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">4b99d9a</code>\"\n    }\n  }), \" say something about a different component. Is it an unwanted change? Again, what if we\\nneed to revert?\"), \"\\n\", React.createElement(_components.li, null, \"…\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"I think we shouldn’t confound \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">git commit</code>\"\n    }\n  }), \" with \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">ctrl</code>\"\n    }\n  }), \" + \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">s</code>\"\n    }\n  }), \". A \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">git log</code>\"\n    }\n  }), \" should be like \", React.createElement(_components.strong, null, \"reading a\\nstory\"), \". By reading the log, I should be able to understand in ~10s the whole file history.\"), \"\\n\", React.createElement(_components.p, null, \"What if we had something like this:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">$ git log --oneline ./src/components/button/\\n\\n06faab4d revert: feat: add disabled property\\n186cce90 feat: add disabled property\\n5b998d9a test: add scenario for readonly property\\n263288a5 fix: fix css when hover\\nc3fb85af feat: add button component</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Way cleaner, isn’t it? That something called \", React.createElement(_components.strong, null, \"Conventional Commits\"), \".\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"conventional-commits\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#conventional-commits\",\n    \"aria-label\": \"conventional commits permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Conventional commits\"), \"\\n\", React.createElement(_components.p, null, \"Conventional commits is a Git commit convention made by the\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\"\n  }, \"Angular team\"), \". Basically,\\nevery pull request should end up with one commit and a standardized commit message.\"), \"\\n\", React.createElement(_components.p, null, \"The message should follow this regex:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"text\\\"><pre class=\\\"language-text\\\"><code class=\\\"language-text\\\">/^(revert: )?(feat|fix|docs|style|refactor|perf|test|chore)(\\\\(.+\\\\))?: .{1,50}/</code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Types of commit:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"feat\"), \": Add a new feature (equivalent to a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">MINOR</code>\"\n    }\n  }), \" in\\n\", React.createElement(_components.a, {\n    href: \"https://semver.org\"\n  }, \"Semantic Versioning\"), \").\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"fix\"), \": Fix a bug (equivalent to a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">PATCH</code>\"\n    }\n  }), \" in \", React.createElement(_components.a, {\n    href: \"https://semver.org\"\n  }, \"Semantic Versioning\"), \").\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"docs\"), \": Documentation changes.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"style\"), \": Code style change (semicolon, indentation…).\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"refactor\"), \": Refactor code without changing public API.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"perf\"), \": Update code performances.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"test\"), \": Add test to an existing feature.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.strong, null, \"chore\"), \": Update something without impacting the user (ex: bump a dependency in \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">package.json</code>\"\n    }\n  }), \").\"), \"\\n\"), \"\\n\", React.createElement(_components.p, null, \"Project that uses this convention: \", React.createElement(_components.a, {\n    href: \"https://github.com/angular/angular\"\n  }, \"Angular\"), \",\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/vuejs/vue\"\n  }, \"Vue.js\"), \", \", React.createElement(_components.a, {\n    href: \"https://github.com/gatsbyjs/gatsby\"\n  }, \"Gatsby (almost)\"), \",\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/lerna/lerna\"\n  }, \"Lerna (almost)\"), \", \", React.createElement(_components.a, {\n    href: \"https://github.com/facebook/jest\"\n  }, \"jest (almost)\"), \".\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"benefits\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#benefits\",\n    \"aria-label\": \"benefits permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Benefits\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Project/code understandability\"), React.createElement(_components.br), \"\\n\", \"Commits are more descriptives and it’s easier to understand the project’s history. It became also\\neasier and to contribute.\", React.createElement(_components.br), \"\\n\", \"For example, I never contributed to the Angular’s http package. But,\\n\", React.createElement(_components.a, {\n    href: \"https://github.com/angular/angular/commits/master/packages/http\"\n  }, \"reading the repo’s git log\"), \" helps\\nme to better understand this package’s history.\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Usability\"), React.createElement(_components.br), \"\\n\", \"If you have one action per commit, it became easier to revert a change. Same if you have git\\nconflict…\"), \"\\n\", React.createElement(_components.p, null, React.createElement(_components.strong, null, \"Master your Git skills\"), React.createElement(_components.br), \"\\n\", \"Because not all Git-repository manager have a “squash and merge” option, you sometimes have to do\\nthis operation by yourself. So, you will learn how to “squash” your commits, how to “fixup” a\\ncommit, how to remove a specific commit… It’s always important to know what’s going on under the\\nhood!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"see-also\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#see-also\",\n    \"aria-label\": \"see also permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"See also\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://www.conventionalcommits.org/en/v1.0.0-beta.2/\"\n  }, \"conventionalcommits.org\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/vuejs/vue/blob/dev/.github/COMMIT_CONVENTION.md\"\n  }, \"Vue.js commit convention\")), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular\"\n  }, \"github.com/conventional-changelog/conventional-changelog\"), \" -\\nA nice tool to generate changelog based on the git message.\"), \"\\n\", React.createElement(_components.li, null, React.createElement(_components.a, {\n    href: \"https://github.com/conventional-changelog/commitlint\"\n  }, \"github.com/conventional-changelog/commitlint\"), \" -\\nA git commit linter. Use it with Husky.\"), \"\\n\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2019/2019-03-01-conventional-commits/git-conventional-commits.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Wrapper from '../components/Wrapper';\nimport Hero from '../components/Hero';\nimport Article from '../components/Article';\nimport PrevNextPost from '../components/PrevNextPost';\nimport SEO from '../components/SEO';\nimport Webmentions from '../components/Webmentions';\nfunction BlogPostTemplate({data, pageContext, children, location}) {\n  const post = data.post;\n  const {previous, next} = pageContext;\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(SEO, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    cover: post.frontmatter.cover && post.frontmatter.cover.publicURL,\n    imageShare: post.frontmatter.imageShare && post.frontmatter.imageShare.publicURL,\n    lang: post.frontmatter.language,\n    translations: post.frontmatter.translations,\n    path: post.frontmatter.slug,\n    isBlogPost: true\n  }), React.createElement(Hero, {\n    heroImg: post.frontmatter.cover,\n    title: post.frontmatter.title\n  }), React.createElement(Wrapper, null, React.createElement(Article, {\n    post: post\n  }, children)), React.createElement(Wrapper, {\n    as: \"aside\"\n  }, React.createElement(Webmentions, {\n    slug: post.frontmatter.slug,\n    title: post.frontmatter.title,\n    redditPostId: post.frontmatter.redditPostId\n  })), React.createElement(PrevNextPost, {\n    previous: previous,\n    next: next\n  }));\n}\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    post: mdx(frontmatter: { slug: { eq: $slug } }) {\n      excerpt\n      frontmatter {\n        title\n        date\n        slug\n        language\n        tags\n        description\n        cover {\n          publicURL\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        imageShare {\n          publicURL\n        }\n        translations {\n          language\n          link\n          hreflang\n        }\n        redditPostId\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","br","span","ul","li","strong","h2","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","id","style","position","href","className","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","location","post","previous","next","Layout","SEO","title","frontmatter","description","excerpt","cover","publicURL","imageShare","lang","language","translations","path","slug","isBlogPost","Hero","heroImg","Wrapper","Article","as","Webmentions","redditPostId","PrevNextPost","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}