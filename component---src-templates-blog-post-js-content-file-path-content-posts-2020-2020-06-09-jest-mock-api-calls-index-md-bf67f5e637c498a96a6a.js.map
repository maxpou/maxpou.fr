{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-posts-2020-2020-06-09-jest-mock-api-calls-index-md-bf67f5e637c498a96a6a.js","mappings":"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","sources":["webpack://maxpou.fr/./content/posts/2020/2020-06-09-jest-mock-api-calls/index.md","webpack://maxpou.fr/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    a: \"a\",\n    strong: \"strong\",\n    h2: \"h2\",\n    span: \"span\",\n    ul: \"ul\",\n    li: \"li\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"Axios is a very popular library you can use to perform HTTP calls. Because it’s not framework\\nspecific, you can easily use it in your Vue.js / React / Vanilla applications.\"), \"\\n\", React.createElement(_components.p, null, \"But how do you test your application that has HTTP calls?\"), \"\\n\", React.createElement(_components.p, null, \"When it comes to testing, I always apply this simple rule:\\n\", React.createElement(_components.a, {\n    href: \"/10-tips-write-better-tests#4---only-mock-what-you-cant-control\"\n  }, \"“Only mock what you can’t control”\"), \".\\nBecause we usually can’t control an external API, I recommend you to mock it.\"), \"\\n\", React.createElement(_components.p, null, \"The first time I had to test a functionality with an API call, I was surprised to see packages on\\nnpm for testing Axios calls. \", React.createElement(_components.strong, null, \"I don’t think we should rely on a npm package for something as simple\\nas an API call\"), \".\"), \"\\n\", React.createElement(_components.p, null, \"Let’s do it without any package!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"how-to-structure-our-code\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#how-to-structure-our-code\",\n    \"aria-label\": \"how to structure our code permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"How to structure our code\"), \"\\n\", React.createElement(_components.p, null, \"I like to have a file where I have all my API calls. In a wink, I can get all the endpoints my\\napplication is using.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// src/services/swapi.api.js</span>\\n<span class=\\\"token keyword\\\">import</span> axios <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'axios'</span>\\n\\n<span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">getStarship</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">id</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> axios<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token template-string\\\"><span class=\\\"token template-punctuation string\\\">`</span><span class=\\\"token string\\\">https://swapi.dev/api/starships/</span><span class=\\\"token interpolation\\\"><span class=\\\"token interpolation-punctuation punctuation\\\">${</span>id<span class=\\\"token interpolation-punctuation punctuation\\\">}</span></span><span class=\\\"token string\\\">/</span><span class=\\\"token template-punctuation string\\\">`</span></span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Now in your test, you can do the following:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// test/your-test.js</span>\\n<span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> getStarships<span class=\\\"token punctuation\\\">,</span> getStarship <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../../src/services/swapi.api'</span>\\n<span class=\\\"token keyword\\\">import</span> fakeData <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'../__fixtures__/swapi.getStarship.12.json'</span>\\njest<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mock</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'../../src/services/swapi.api'</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">beforeEach</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  getStarship<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">mockResolvedValue</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">{</span> <span class=\\\"token literal-property property\\\">data</span><span class=\\\"token operator\\\">:</span> fakeData <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token function\\\">afterEach</span><span class=\\\"token punctuation\\\">(</span>jest<span class=\\\"token punctuation\\\">.</span>resetAllMocks<span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"Here are few interesting points:\"), \"\\n\", React.createElement(_components.ul, null, \"\\n\", React.createElement(_components.li, null, \"I usually put my fake data in a \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">__fixtures__</code>\"\n    }\n  }), \" folder;\"), \"\\n\", React.createElement(_components.li, null, \"I like to get the URL path the file name;\"), \"\\n\", React.createElement(_components.li, null, \"I use an \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">afterEach()</code>\"\n    }\n  }), \" statement to clean up mocks after each test.\"), \"\\n\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// test/your-test.js</span>\\n<span class=\\\"token function\\\">it</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'should do something'</span><span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">async</span> <span class=\\\"token punctuation\\\">(</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">render</span><span class=\\\"token punctuation\\\">(</span>App<span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token function\\\">expect</span><span class=\\\"token punctuation\\\">(</span>getStarships<span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">toHaveBeenCalledTimes</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token number\\\">1</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"In your test you can, if it makes sense to you, add assertion with this call.\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"working-with-code-coverage\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#working-with-code-coverage\",\n    \"aria-label\": \"working with code coverage permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Working with code coverage?\"), \"\\n\", React.createElement(_components.p, null, \"Although I think \", React.createElement(_components.a, {\n    href: \"/code-coverage\"\n  }, \"you shouldn’t pay too much attention to your code coverage\"), \", you\\ncan add the following line in your \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">jest.config.js</code>\"\n    }\n  }), \":\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight has-highlighted-lines\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// jest.config.js</span>\\nmodule<span class=\\\"token punctuation\\\">.</span>exports <span class=\\\"token operator\\\">=</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token literal-property property\\\">collectCoverageFrom</span><span class=\\\"token operator\\\">:</span> <span class=\\\"token punctuation\\\">[</span>\\n    <span class=\\\"token string\\\">'src/**/*.{js,vue}'</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"gatsby-highlight-code-line\\\">    <span class=\\\"token string\\\">'!src/services/*.api.js'</span><span class=\\\"token punctuation\\\">,</span></span>  <span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">,</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"All files following this pattern in this folder will be ignored!\"), \"\\n\", React.createElement(_components.p, null, \"And that’s it for today :)\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2020/2020-06-09-jest-mock-api-calls/index.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Wrapper from '../components/Wrapper';\nimport Hero from '../components/Hero';\nimport Article from '../components/Article';\nimport PrevNextPost from '../components/PrevNextPost';\nimport SEO from '../components/SEO';\nimport Webmentions from '../components/Webmentions';\nfunction BlogPostTemplate({data, pageContext, children, location}) {\n  const post = data.post;\n  const {previous, next} = pageContext;\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(SEO, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    cover: post.frontmatter.cover && post.frontmatter.cover.publicURL,\n    imageShare: post.frontmatter.imageShare && post.frontmatter.imageShare.publicURL,\n    lang: post.frontmatter.language,\n    translations: post.frontmatter.translations,\n    path: post.frontmatter.slug,\n    isBlogPost: true\n  }), React.createElement(Hero, {\n    heroImg: post.frontmatter.cover,\n    title: post.frontmatter.title\n  }), React.createElement(Wrapper, null, React.createElement(Article, {\n    post: post\n  }, children)), React.createElement(Wrapper, {\n    as: \"aside\"\n  }, React.createElement(Webmentions, {\n    slug: post.frontmatter.slug,\n    title: post.frontmatter.title,\n    redditPostId: post.frontmatter.redditPostId\n  })), React.createElement(PrevNextPost, {\n    previous: previous,\n    next: next\n  }));\n}\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    post: mdx(frontmatter: { slug: { eq: $slug } }) {\n      excerpt\n      frontmatter {\n        title\n        date\n        slug\n        language\n        tags\n        description\n        cover {\n          publicURL\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        imageShare {\n          publicURL\n        }\n        translations {\n          language\n          link\n          hreflang\n        }\n        redditPostId\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","a","strong","h2","span","ul","li","_provideComponents","components","React","href","id","style","position","className","dangerouslySetInnerHTML","__html","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","location","post","previous","next","Layout","SEO","title","frontmatter","description","excerpt","cover","publicURL","imageShare","lang","language","translations","path","slug","isBlogPost","Hero","heroImg","Wrapper","Article","as","Webmentions","redditPostId","PrevNextPost","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}