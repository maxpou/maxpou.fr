{"componentChunkName":"component---src-templates-blog-post-js","path":"/git-conventional-commits","result":{"data":{"post":{"excerpt":"Git is a very powerful tool installed on most of our machines. As developer, we use it every day.\nBut, unfortunately, at first glance, thisâ€¦","body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Enhance your git log with conventional commits\",\n  \"slug\": \"git-conventional-commits\",\n  \"language\": \"en\",\n  \"date\": \"2019-03-01T00:00:00.000Z\",\n  \"imageShare\": \"./git-conventional-commits-share.png\",\n  \"cover\": \"./cover.jpg\",\n  \"tags\": [\"Git\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Git is a very powerful tool installed on most of our machines. As developer, we use it every day.\\nBut, unfortunately, at first glance, this tool is not very developer friendly. That\\u2019s why a lot of\\npeople bypass the command line interface (CLI) with a graphical user interface (GUI).\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"It\\u2019s like using a framework without knowing the language itself. It can be OK at the beginning but,\\nsooner or later you, you will have problems.\"), mdx(\"p\", null, \"Let\\u2019s take an example:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ git log --oneline ./src/components/button/\\n\\ndaccff1f test should pass\\n3fff19f6 test should pass\\n5b998d9a add disabled property for button\\n06faab4d fix lint\\n186cce90 refactor button\\n4b99d91a fix spinner component\\n5b998d9a fix css\\n263288a5 test should pass\\nc3fb85af Create Button component\"))), mdx(\"p\", null, \"There\\u2019s might be nothing wrong for you with this log. Let me show you the issues I\\u2019ve found with\\nthis log:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It\\u2019s hard to understand the Component\\u2019s history. We might repeat errors already fixed.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"There are unnecessary commits which pollute logs and make history hard to read. Also,\\nfunctionalities like \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"git blame\"), \" become irrelevant.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"It seems that a feature was added by a few commits. Which commit should I include if I want to\\nrevert this operation?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"4b99d9a\"), \" say something about a different component. Is it an unwanted change? Again, what if we\\nneed to revert?\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\u2026\")), mdx(\"p\", null, \"I think we shouldn\\u2019t confound \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"git commit\"), \" with \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"ctrl\"), \" + \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"s\"), \". A \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"git log\"), \" should be like \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"reading a\\nstory\"), \". By reading the log, I should be able to understand in ~10s the whole file history.\"), mdx(\"p\", null, \"What if we had something like this:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"$ git log --oneline ./src/components/button/\\n\\n06faab4d revert: feat: add disabled property\\n186cce90 feat: add disabled property\\n5b998d9a test: add scenario for readonly property\\n263288a5 fix: fix css when hover\\nc3fb85af feat: add button component\"))), mdx(\"p\", null, \"Way cleaner, isn\\u2019t it? That something called \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Conventional Commits\"), \".\"), mdx(\"h2\", {\n    \"id\": \"conventional-commits\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#conventional-commits\",\n    \"aria-label\": \"conventional commits permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Conventional commits\"), mdx(\"p\", null, \"Conventional commits is a Git commit convention made by the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/angular/angular/blob/master/CONTRIBUTING.md#commit\"\n  }, \"Angular team\"), \". Basically,\\nevery pull request should end up with one commit and a standardized commit message.\"), mdx(\"p\", null, \"The message should follow this regex:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"text\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-text\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-text\"\n  }, \"/^(revert: )?(feat|fix|docs|style|refactor|perf|test|chore)(\\\\(.+\\\\))?: .{1,50}/\"))), mdx(\"p\", null, \"Types of commit:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"feat\"), \": Add a new feature (equivalent to a \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"MINOR\"), \" in\\n\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://semver.org\"\n  }, \"Semantic Versioning\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"fix\"), \": Fix a bug (equivalent to a \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"PATCH\"), \" in \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://semver.org\"\n  }, \"Semantic Versioning\"), \").\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"docs\"), \": Documentation changes.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"style\"), \": Code style change (semicolon, indentation\\u2026).\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"refactor\"), \": Refactor code without changing public API.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"perf\"), \": Update code performances.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"test\"), \": Add test to an existing feature.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"chore\"), \": Update something without impacting the user (ex: bump a dependency in \", mdx(\"code\", {\n    parentName: \"li\",\n    \"className\": \"language-text\"\n  }, \"package.json\"), \").\")), mdx(\"p\", null, \"Project that uses this convention: \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/angular/angular\"\n  }, \"Angular\"), \",\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/vuejs/vue\"\n  }, \"Vue.js\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/gatsbyjs/gatsby\"\n  }, \"Gatsby (almost)\"), \",\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/lerna/lerna\"\n  }, \"Lerna (almost)\"), \", \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/facebook/jest\"\n  }, \"jest (almost)\"), \".\"), mdx(\"h2\", {\n    \"id\": \"benefits\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#benefits\",\n    \"aria-label\": \"benefits permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"Benefits\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Project/code understandability\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Commits are more descriptives and it\\u2019s easier to understand the project\\u2019s history. It became also\\neasier and to contribute.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"For example, I never contributed to the Angular\\u2019s http package. But,\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://github.com/angular/angular/commits/master/packages/http\"\n  }, \"reading the repo\\u2019s git log\"), \" helps\\nme to better understand this package\\u2019s history.\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Usability\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"If you have one action per commit, it became easier to revert a change. Same if you have git\\nconflict\\u2026\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"Master your Git skills\"), mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Because not all Git-repository manager have a \\u201Csquash and merge\\u201D option, you sometimes have to do\\nthis operation by yourself. So, you will learn how to \\u201Csquash\\u201D your commits, how to \\u201Cfixup\\u201D a\\ncommit, how to remove a specific commit\\u2026 It\\u2019s always important to know what\\u2019s going on under the\\nhood!\"), mdx(\"h2\", {\n    \"id\": \"see-also\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#see-also\",\n    \"aria-label\": \"see also permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"See also\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://www.conventionalcommits.org/en/v1.0.0-beta.2/\"\n  }, \"conventionalcommits.org\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/vuejs/vue/blob/dev/.github/COMMIT_CONVENTION.md\"\n  }, \"Vue.js commit convention\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-angular\"\n  }, \"github.com/conventional-changelog/conventional-changelog\"), \" -\\nA nice tool to generate changelog based on the git message.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/conventional-changelog/commitlint\"\n  }, \"github.com/conventional-changelog/commitlint\"), \" -\\nA git commit linter. Use it with Husky.\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Enhance your git log with conventional commits","date":"2019-03-01T00:00:00.000Z","slug":"git-conventional-commits","language":"en","tags":["Git"],"description":null,"cover":{"publicURL":"/static/dfb0f75c158ffff0e881b5d555976ecc/cover.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#c8b8b8","images":{"fallback":{"src":"/static/dfb0f75c158ffff0e881b5d555976ecc/782a5/cover.jpg","srcSet":"/static/dfb0f75c158ffff0e881b5d555976ecc/d796c/cover.jpg 1404w,\n/static/dfb0f75c158ffff0e881b5d555976ecc/8119d/cover.jpg 2808w,\n/static/dfb0f75c158ffff0e881b5d555976ecc/782a5/cover.jpg 5616w","sizes":"(min-width: 5616px) 5616px, 100vw"},"sources":[{"srcSet":"/static/dfb0f75c158ffff0e881b5d555976ecc/33c69/cover.webp 1404w,\n/static/dfb0f75c158ffff0e881b5d555976ecc/e004f/cover.webp 2808w,\n/static/dfb0f75c158ffff0e881b5d555976ecc/40535/cover.webp 5616w","type":"image/webp","sizes":"(min-width: 5616px) 5616px, 100vw"}]},"width":5616,"height":3744}}},"imageShare":{"publicURL":"/static/84da424b48810d26cc048eafff8dbe91/git-conventional-commits-share.png"},"translations":null,"redditPostId":null}}},"pageContext":{"slug":"git-conventional-commits","previous":{"fileAbsolutePath":"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2019/2019-11-28-git-cheat-sheet/index.md","frontmatter":{"title":"Git: Cheat Sheet (advanced)","slug":"git-cheat-sheet","tags":["Git"],"language":"en","featured":true,"cover":{"publicURL":"/static/20c5da898a702c5828fba56bf688f49f/git-toolbox.png","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#d8e8f8","images":{"fallback":{"src":"/static/20c5da898a702c5828fba56bf688f49f/f60b4/git-toolbox.png","srcSet":"/static/20c5da898a702c5828fba56bf688f49f/c325e/git-toolbox.png 160w,\n/static/20c5da898a702c5828fba56bf688f49f/3b9da/git-toolbox.png 320w,\n/static/20c5da898a702c5828fba56bf688f49f/f60b4/git-toolbox.png 640w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/20c5da898a702c5828fba56bf688f49f/c5556/git-toolbox.webp 160w,\n/static/20c5da898a702c5828fba56bf688f49f/06b74/git-toolbox.webp 320w,\n/static/20c5da898a702c5828fba56bf688f49f/e076d/git-toolbox.webp 640w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":270}}},"unlisted":null},"timeToRead":1,"excerpt":"If you find git confusing, I created this little cheat sheet! Please, note that I voluntarily\nskipped the basic commands like  git commitâ€¦"},"next":{"fileAbsolutePath":"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2020/2020-06-11-vue-js-testing-library/index.md","frontmatter":{"title":"Vue.js Testing Made it Easy (with Testing Library)","slug":"vue-js-testing-library","tags":["Testing","JavaScript","Vue.js"],"language":"en","featured":true,"cover":{"publicURL":"/static/88713e0c651cbb40efe6b331fe8fadef/cover.jpeg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#f8d898","images":{"fallback":{"src":"/static/88713e0c651cbb40efe6b331fe8fadef/a00fc/cover.jpg","srcSet":"/static/88713e0c651cbb40efe6b331fe8fadef/1bf41/cover.jpg 160w,\n/static/88713e0c651cbb40efe6b331fe8fadef/3f4ca/cover.jpg 320w,\n/static/88713e0c651cbb40efe6b331fe8fadef/a00fc/cover.jpg 640w,\n/static/88713e0c651cbb40efe6b331fe8fadef/61b1d/cover.jpg 1280w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/88713e0c651cbb40efe6b331fe8fadef/fefa5/cover.webp 160w,\n/static/88713e0c651cbb40efe6b331fe8fadef/b7f87/cover.webp 320w,\n/static/88713e0c651cbb40efe6b331fe8fadef/84679/cover.webp 640w,\n/static/88713e0c651cbb40efe6b331fe8fadef/dff81/cover.webp 1280w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":369}}},"unlisted":null},"timeToRead":4,"excerpt":"Today, I want to talk about testing in the Vue.js ecosystem. Between my previous job and my current\none, I've been searching for too long aâ€¦"}}},"staticQueryHashes":["2709979211"]}