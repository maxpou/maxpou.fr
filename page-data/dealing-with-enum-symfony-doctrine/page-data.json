{"componentChunkName":"component---src-templates-blog-post-js","path":"/dealing-with-enum-symfony-doctrine","result":{"data":{"post":{"excerpt":"Using Enum in a Symfony App isn't obvious. If your Enum is short, you can directly put it on your\nentity. But if it grows, it will beâ€¦","body":"function _typeof(obj) { \"@babel/helpers - typeof\"; return _typeof = \"function\" == typeof Symbol && \"symbol\" == typeof Symbol.iterator ? function (obj) { return typeof obj; } : function (obj) { return obj && \"function\" == typeof Symbol && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; }, _typeof(obj); }\nvar _excluded = [\"components\"];\nfunction _extends() { _extends = Object.assign ? Object.assign.bind() : function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\nfunction _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\nfunction _toPropertyKey(arg) { var key = _toPrimitive(arg, \"string\"); return _typeof(key) === \"symbol\" ? key : String(key); }\nfunction _toPrimitive(input, hint) { if (_typeof(input) !== \"object\" || input === null) return input; var prim = input[Symbol.toPrimitive]; if (prim !== undefined) { var res = prim.call(input, hint || \"default\"); if (_typeof(res) !== \"object\") return res; throw new TypeError(\"@@toPrimitive must return a primitive value.\"); } return (hint === \"string\" ? String : Number)(input); }\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n/* @jsxRuntime classic */\n/* @jsx mdx */\n\nvar _frontmatter = {\n  \"layout\": \"post\",\n  \"title\": \"Dealing with Enum in a Symfony App with Doctrine2 as ORM\",\n  \"slug\": \"dealing-with-enum-symfony-doctrine\",\n  \"date\": \"2016-08-04T00:00:00.000Z\",\n  \"language\": \"en\",\n  \"tags\": [\"Symfony2\", \"PHP\", \"Doctrine\"],\n  \"generate-card\": false,\n  \"cover\": \"./abstract-1.jpg\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n    props = _objectWithoutProperties(_ref, _excluded);\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"Using Enum in a Symfony App isn\\u2019t obvious. If your Enum is short, you can directly put it on your\\nentity. But if it grows, it will be quickly unmanageable.\"), mdx(\"h2\", {\n    \"id\": \"the-problem\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#the-problem\",\n    \"aria-label\": \"the problem permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"The problem\"), mdx(\"p\", null, \"Ok given, you want to create a message object which contains an attribute called \", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"type\"), \". Like\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://getbootstrap.com/components/#alerts\"\n  }, \"Twitter Bootstrap\\u2019s Alert\"), \", your Message type\\u2019s\\nattribute must contain some specific strings (e.g. info, success\\u2026).\"), mdx(\"p\", null, \"In the\\n\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"http://doctrine2.readthedocs.io/en/latest/cookbook/mysql-enums.html\"\n  }, \"official documentation\"), \",\\nDoctrine provides 2 solutions for MySQL Database. What happens if we want to use another Database\\nlike PostgreSQL? By the way, you can also take a look at these solutions. As far as I am concerned,\\nI don\\u2019t like them because it didn\\u2019t solve the problem on the \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"PHP side\"), \".\"), mdx(\"p\", null, \"Obviously, we can also create a Table called MessageType. But according to me, a database table must\\nbe used to store data. In this case, a type isn\\u2019t managed by a human.\"), mdx(\"p\", null, \"So we need custom \", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"reusable\"), \" PHP Enum.\", mdx(\"br\", {\n    parentName: \"p\"\n  }), \"\\n\", \"Let\\u2019s do this!\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"/75d6f9ce18b92e60d1d799847cb7d0bf/ship-kid.gif\",\n    \"alt\": \"a kid on a ship\"\n  })), mdx(\"h2\", {\n    \"id\": \"a-solution\",\n    \"style\": {\n      \"position\": \"relative\"\n    }\n  }, mdx(\"a\", {\n    parentName: \"h2\",\n    \"href\": \"#a-solution\",\n    \"aria-label\": \"a solution permalink\",\n    \"className\": \"anchor before\"\n  }, mdx(\"svg\", {\n    parentName: \"a\",\n    \"aria-hidden\": \"true\",\n    \"focusable\": \"false\",\n    \"height\": \"16\",\n    \"version\": \"1.1\",\n    \"viewBox\": \"0 0 16 16\",\n    \"width\": \"16\"\n  }, mdx(\"path\", {\n    parentName: \"svg\",\n    \"fillRule\": \"evenodd\",\n    \"d\": \"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"\n  }))), \"A solution\"), mdx(\"p\", null, \"First, you need to create a MessageTypeEnum.\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"php\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-php\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token php language-php\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token delimiter important\"\n  }, \"<?php\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"namespace\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token package\"\n  }, \"DemoBundle\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"Enum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"abstract\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name-definition class-name\"\n  }, \"MessageTypeEnum\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_INFO\"), \"    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"info\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_WARNING\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"warning\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_SUCCESS\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"success\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"const\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_DANGER\"), \"  \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"danger\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"/** @var array user friendly named type */\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"protected\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"static\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeName\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_INFO\"), \"    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'Information'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_WARNING\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'Attention'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_SUCCESS\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'Succ\\xE8s'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_DANGER\"), \"  \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'Danger'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"/**\\n     * @param  string $typeShortName\\n     * @return string\\n     */\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"static\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function-definition function\"\n  }, \"getTypeName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeShortName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"!\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"isset\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"static\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeShortName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"Unknown type (\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token interpolation\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeShortName\")), \")\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"static\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$typeShortName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"/**\\n     * @return array<string>\\n     */\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"static\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function-definition function\"\n  }, \"getAvailableTypes\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"[\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_INFO\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_WARNING\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_SUCCESS\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword static-context\"\n  }, \"self\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_DANGER\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"]\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\")))), mdx(\"p\", null, \"Here is an example of use:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"php\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-php\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token php language-php\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token delimiter important\"\n  }, \"<?php\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"echo\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_INFO\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"//info\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"echo\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"getTypeName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant\"\n  }, \"TYPE_INFO\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"//Information\"))))), mdx(\"p\", null, \"Now, you need to adapt your Entity:\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"php\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-php\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token php language-php\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token delimiter important\"\n  }, \"<?php\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"class\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name-definition class-name\"\n  }, \"Message\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"/**\\n     * @var string\\n     * @ORM\\\\Column(name=\\\"type\\\", type=\\\"string\\\", length=255, nullable=false)\\n     */\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"private\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$type\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"//...\"), \"\\n\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token comment\"\n  }, \"/**\\n     * @param string $type\\n     * @return Message\\n     */\"), \"\\n     \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function-definition function\"\n  }, \"setType\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$type\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n     \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n         \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"if\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"!\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"in_array\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$type\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"getAvailableTypes\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n             \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"throw\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"new\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name class-name-fully-qualified\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"\\\\\"), \"InvalidArgumentException\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string double-quoted-string\"\n  }, \"\\\"Invalid type\\\"\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n         \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\\n         \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$this\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"->\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token property\"\n  }, \"type\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$type\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\\n         \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$this\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n     \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"))))), mdx(\"p\", null, \"And this is the form: (\", mdx(\"code\", {\n    parentName: \"p\",\n    \"className\": \"language-text\"\n  }, \"MessageType.php\"), \")\"), mdx(\"div\", {\n    \"className\": \"gatsby-highlight\",\n    \"data-language\": \"php\"\n  }, mdx(\"pre\", {\n    parentName: \"div\",\n    \"className\": \"language-php\"\n  }, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-php\"\n  }, mdx(\"span\", {\n    parentName: \"code\",\n    \"className\": \"token php language-php\"\n  }, mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token delimiter important\"\n  }, \"<?php\"), \"\\n\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"public\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"function\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function-definition function\"\n  }, \"buildForm\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name type-declaration\"\n  }, \"FormBuilderInterface\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$builder\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword type-hint\"\n  }, \"array\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$options\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$builder\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"->\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"add\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'content'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"->\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"add\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'type'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'choice'\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"array\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'required'\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'choices'\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"getAvailableTypes\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'choices_as_values'\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token constant boolean\"\n  }, \"true\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token string single-quoted-string\"\n  }, \"'choice_label'\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"=>\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"function\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$choice\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"{\"), \"\\n                \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token keyword\"\n  }, \"return\"), \" \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token class-name static-context\"\n  }, \"MessageTypeEnum\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token operator\"\n  }, \"::\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token function\"\n  }, \"getTypeName\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"(\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token variable\"\n  }, \"$choice\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n            \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \",\"), \"\\n        \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \")\"), \"\\n    \", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \";\"), \"\\n\", mdx(\"span\", {\n    parentName: \"span\",\n    \"className\": \"token punctuation\"\n  }, \"}\"))))), mdx(\"p\", null, \"And tadaaa it works!\"), mdx(\"p\", null, \"Your Form should look like this:\"), mdx(\"div\", {\n    className: \"notice\"\n  }, mdx(\"form\", null, mdx(\"input\", {\n    type: \"text\",\n    name: \"demobundle_message[content]\"\n  }), mdx(\"br\", null), mdx(\"select\", _defineProperty({\n    name: \"type\"\n  }, \"name\", \"demobundle_message[type]\"), mdx(\"option\", {\n    value: \"info\"\n  }, \"Information\"), mdx(\"option\", {\n    value: \"warning\"\n  }, \"Attention\"), mdx(\"option\", {\n    value: \"success\"\n  }, \"Succ\\xE8s\"), mdx(\"option\", {\n    value: \"danger\"\n  }, \"Danger\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Dealing with Enum in a Symfony App with Doctrine2 as ORM","date":"2016-08-04T00:00:00.000Z","slug":"dealing-with-enum-symfony-doctrine","language":"en","tags":["Symfony2","PHP","Doctrine"],"description":null,"cover":{"publicURL":"/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/abstract-1.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#b8c8c8","images":{"fallback":{"src":"/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/ff179/abstract-1.jpg","srcSet":"/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/c77c3/abstract-1.jpg 284w,\n/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/97508/abstract-1.jpg 568w,\n/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/ff179/abstract-1.jpg 1136w","sizes":"(min-width: 1136px) 1136px, 100vw"},"sources":[{"srcSet":"/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/be6c4/abstract-1.webp 284w,\n/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/331df/abstract-1.webp 568w,\n/static/f1c270f96cdbc4d3051bdc6d39fd2ef0/a3622/abstract-1.webp 1136w","type":"image/webp","sizes":"(min-width: 1136px) 1136px, 100vw"}]},"width":1136,"height":640}}},"imageShare":null,"translations":null,"redditPostId":null}}},"pageContext":{"slug":"dealing-with-enum-symfony-doctrine","previous":{"fileAbsolutePath":"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2019/2019-10-14-git-under-the-hood/index.md","frontmatter":{"title":"What's happens when you `git commit`","slug":"git-under-the-hood","tags":["Git"],"language":"en","featured":true,"cover":{"publicURL":"/static/ca587ae5a4fe01cfbb8004bcf9929aca/cover.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#082848","images":{"fallback":{"src":"/static/ca587ae5a4fe01cfbb8004bcf9929aca/cb1c0/cover.jpg","srcSet":"/static/ca587ae5a4fe01cfbb8004bcf9929aca/deec6/cover.jpg 157w,\n/static/ca587ae5a4fe01cfbb8004bcf9929aca/011bc/cover.jpg 313w,\n/static/ca587ae5a4fe01cfbb8004bcf9929aca/cb1c0/cover.jpg 626w","sizes":"(min-width: 626px) 626px, 100vw"},"sources":[{"srcSet":"/static/ca587ae5a4fe01cfbb8004bcf9929aca/f6a86/cover.webp 157w,\n/static/ca587ae5a4fe01cfbb8004bcf9929aca/9c435/cover.webp 313w,\n/static/ca587ae5a4fe01cfbb8004bcf9929aca/1b615/cover.webp 626w","type":"image/webp","sizes":"(min-width: 626px) 626px, 100vw"}]},"width":640,"height":399.74440894568687}}},"unlisted":null},"timeToRead":3,"excerpt":"Nowadays, most of our projects use Git as a version control system. It means most of our projects\nhave a  .git  folder. But, have you everâ€¦"},"next":{"fileAbsolutePath":"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2021/2021-05-27-vue-js-module-architecture/index.mdx","frontmatter":{"title":"Vue.js: Let's Scale!","slug":"vue-js-module-architecture","tags":["Vue.js"],"language":"en","featured":true,"cover":{"publicURL":"/static/0efc7f7b0b5eeea26232de8583ee1aa7/cover.jpg","childImageSharp":{"gatsbyImageData":{"layout":"constrained","backgroundColor":"#084848","images":{"fallback":{"src":"/static/0efc7f7b0b5eeea26232de8583ee1aa7/a962d/cover.jpg","srcSet":"/static/0efc7f7b0b5eeea26232de8583ee1aa7/da65b/cover.jpg 160w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/f6fcd/cover.jpg 320w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/a962d/cover.jpg 640w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/f3dc5/cover.jpg 1280w","sizes":"(min-width: 640px) 640px, 100vw"},"sources":[{"srcSet":"/static/0efc7f7b0b5eeea26232de8583ee1aa7/405d4/cover.webp 160w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/dde70/cover.webp 320w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/18e38/cover.webp 640w,\n/static/0efc7f7b0b5eeea26232de8583ee1aa7/f121e/cover.webp 1280w","type":"image/webp","sizes":"(min-width: 640px) 640px, 100vw"}]},"width":640,"height":426}}},"unlisted":null},"timeToRead":5,"excerpt":"Just like React, Vue.js is a great tool to build web applications. In this article, I will share a\nproject I have been working on over theâ€¦"}}},"staticQueryHashes":["2709979211"]}