{"version":3,"file":"component---src-templates-blog-post-js-content-file-path-content-posts-2020-2020-05-25-async-without-try-catch-index-md-a65c8a1eb6dcb01a4b18.js","mappings":"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","sources":["webpack://maxpou.fr/./content/posts/2020/2020-05-25-async-without-try-catch/index.md","webpack://maxpou.fr/./src/templates/blog-post.js"],"sourcesContent":["/*@jsxRuntime classic @jsx React.createElement @jsxFrag React.Fragment*/\nimport {useMDXComponents as _provideComponents} from \"@mdx-js/react\";\nimport React from \"react\";\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    p: \"p\",\n    span: \"span\",\n    em: \"em\",\n    strong: \"strong\",\n    h2: \"h2\",\n    a: \"a\"\n  }, _provideComponents(), props.components);\n  return React.createElement(React.Fragment, null, React.createElement(_components.p, null, \"When \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">async/await</code>\"\n    }\n  }), \" feature came with ECMAScript 2017, it literally brought promises to the next\\nlevel. In a nutshell, it removes the removing Pyramid of doom effect (\", React.createElement(_components.em, null, \"a.k.a. Callback hell\"), \") and\\nmakes asynchronous code easier to read.\"), \"\\n\", React.createElement(_components.p, null, \"If your application rely on an API, I guess you writte a lot of code like this:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">try</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">const</span> response <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> http<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'https://api.github.com/users/maxpou'</span><span class=\\\"token punctuation\\\">)</span>\\n  <span class=\\\"token comment\\\">// do something</span>\\n<span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">catch</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// error handling</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"I never been a big fan of try..catch blocks. \", React.createElement(_components.strong, null, \"I like to strive for a minimum level of indentation\\nin my code.\"), \" Let’s see how we can remove this block!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"wrapper\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#wrapper\",\n    \"aria-label\": \"wrapper permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Wrapper\"), \"\\n\", React.createElement(_components.p, null, \"First, we need to create a wrapper. You can put this function in your project’s shared library:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">export</span> <span class=\\\"token keyword\\\">function</span> <span class=\\\"token function\\\">to</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">promise</span><span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token keyword\\\">return</span> promise<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">then</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">data</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">[</span><span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">,</span> data<span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">catch</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token parameter\\\">err</span> <span class=\\\"token operator\\\">=></span> <span class=\\\"token punctuation\\\">[</span>err<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token keyword\\\">null</span><span class=\\\"token punctuation\\\">]</span><span class=\\\"token punctuation\\\">)</span>\\n<span class=\\\"token punctuation\\\">}</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"As you can see, this function can return 2 different values: the error \", React.createElement(_components.strong, null, \"or\"), \" the fulfilled value of\\nthe promise.\"), \"\\n\", React.createElement(_components.p, null, \"Now in your code, you can remove those \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">try..catch</code>\"\n    }\n  }), \" and replace them with the following:\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token keyword\\\">import</span> <span class=\\\"token punctuation\\\">{</span> to <span class=\\\"token punctuation\\\">}</span> <span class=\\\"token keyword\\\">from</span> <span class=\\\"token string\\\">'utils/async-utils'</span>\\n\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>err<span class=\\\"token punctuation\\\">,</span> response<span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">to</span><span class=\\\"token punctuation\\\">(</span>http<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'https://api.github.com/users/maxpou'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span>\\n\\n<span class=\\\"token keyword\\\">if</span> <span class=\\\"token punctuation\\\">(</span>err<span class=\\\"token punctuation\\\">)</span> <span class=\\\"token punctuation\\\">{</span>\\n  <span class=\\\"token comment\\\">// error handling</span>\\n<span class=\\\"token punctuation\\\">}</span>\\n\\n<span class=\\\"token comment\\\">// do something</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"🎉 This is it!\"), \"\\n\", React.createElement(_components.h2, {\n    id: \"gotcha---dont-try-to-destructure\",\n    style: {\n      position: \"relative\"\n    }\n  }, React.createElement(_components.a, {\n    href: \"#gotcha---dont-try-to-destructure\",\n    \"aria-label\": \"gotcha   dont try to destructure permalink\",\n    className: \"anchor before\"\n  }, React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<svg aria-hidden=\\\"true\\\" focusable=\\\"false\\\" height=\\\"16\\\" version=\\\"1.1\\\" viewBox=\\\"0 0 16 16\\\" width=\\\"16\\\"><path fill-rule=\\\"evenodd\\\" d=\\\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\\\"></path></svg>\"\n    }\n  })), \"Gotcha - don’t try to destructure\"), \"\\n\", React.createElement(_components.p, null, \"In my actual company, we heavily rely on this wrapper. One day, a dev tried to destructure the\\nresponse object.\"), \"\\n\", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<div class=\\\"gatsby-highlight\\\" data-language=\\\"js\\\"><pre class=\\\"language-js\\\"><code class=\\\"language-js\\\"><span class=\\\"token comment\\\">// ⚠️ this won't works! ⚠️</span>\\n<span class=\\\"token keyword\\\">const</span> <span class=\\\"token punctuation\\\">[</span>err<span class=\\\"token punctuation\\\">,</span> <span class=\\\"token punctuation\\\">{</span> data <span class=\\\"token punctuation\\\">}</span><span class=\\\"token punctuation\\\">]</span> <span class=\\\"token operator\\\">=</span> <span class=\\\"token keyword\\\">await</span> <span class=\\\"token function\\\">to</span><span class=\\\"token punctuation\\\">(</span>http<span class=\\\"token punctuation\\\">.</span><span class=\\\"token function\\\">get</span><span class=\\\"token punctuation\\\">(</span><span class=\\\"token string\\\">'https://api.github.com/users/maxpou'</span><span class=\\\"token punctuation\\\">)</span><span class=\\\"token punctuation\\\">)</span></code></pre></div>\"\n    }\n  }), \"\\n\", React.createElement(_components.p, null, \"In case of an error, this code won’t works. You will have \", React.createElement(_components.span, {\n    dangerouslySetInnerHTML: {\n      __html: \"<code class=\\\"language-text\\\">Cannot read property 'data' of null</code>\"\n    }\n  }), \". You\\ncan destructure if it’s not defined, even if you don’t use it!\"));\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? React.createElement(MDXLayout, props, React.createElement(_createMdxContent, props)) : _createMdxContent(props);\n}\nexport default MDXContent;\n","import GATSBY_COMPILED_MDX from \"/home/runner/work/maxpou.fr/maxpou.fr/content/posts/2020/2020-05-25-async-without-try-catch/index.md\";\nimport React from 'react';\nimport {graphql} from 'gatsby';\nimport Layout from '../components/Layout';\nimport Wrapper from '../components/Wrapper';\nimport Hero from '../components/Hero';\nimport Article from '../components/Article';\nimport PrevNextPost from '../components/PrevNextPost';\nimport SEO from '../components/SEO';\nimport Webmentions from '../components/Webmentions';\nfunction BlogPostTemplate({data, pageContext, children, location}) {\n  const post = data.post;\n  const {previous, next} = pageContext;\n  return React.createElement(Layout, {\n    location: location\n  }, React.createElement(SEO, {\n    title: post.frontmatter.title,\n    description: post.frontmatter.description || post.excerpt,\n    cover: post.frontmatter.cover && post.frontmatter.cover.publicURL,\n    imageShare: post.frontmatter.imageShare && post.frontmatter.imageShare.publicURL,\n    lang: post.frontmatter.language,\n    translations: post.frontmatter.translations,\n    path: post.frontmatter.slug,\n    isBlogPost: true\n  }), React.createElement(Hero, {\n    heroImg: post.frontmatter.cover,\n    title: post.frontmatter.title\n  }), React.createElement(Wrapper, null, React.createElement(Article, {\n    post: post\n  }, children)), React.createElement(Wrapper, {\n    as: \"aside\"\n  }, React.createElement(Webmentions, {\n    slug: post.frontmatter.slug,\n    title: post.frontmatter.title,\n    redditPostId: post.frontmatter.redditPostId\n  })), React.createElement(PrevNextPost, {\n    previous: previous,\n    next: next\n  }));\n}\nBlogPostTemplate\nexport default function GatsbyMDXWrapper(props) {\n  return React.createElement(BlogPostTemplate, props, React.createElement(GATSBY_COMPILED_MDX, props));\n}\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    post: mdx(frontmatter: { slug: { eq: $slug } }) {\n      excerpt\n      frontmatter {\n        title\n        date\n        slug\n        language\n        tags\n        description\n        cover {\n          publicURL\n          childImageSharp {\n            gatsbyImageData\n          }\n        }\n        imageShare {\n          publicURL\n        }\n        translations {\n          language\n          link\n          hreflang\n        }\n        redditPostId\n      }\n    }\n  }\n`;\n"],"names":["_createMdxContent","props","_components","Object","assign","p","span","em","strong","h2","a","_provideComponents","components","React","dangerouslySetInnerHTML","__html","id","style","position","href","className","wrapper","MDXLayout","BlogPostTemplate","_ref","data","pageContext","children","location","post","previous","next","Layout","SEO","title","frontmatter","description","excerpt","cover","publicURL","imageShare","lang","language","translations","path","slug","isBlogPost","Hero","heroImg","Wrapper","Article","as","Webmentions","redditPostId","PrevNextPost","GatsbyMDXWrapper","GATSBY_COMPILED_MDX"],"sourceRoot":""}