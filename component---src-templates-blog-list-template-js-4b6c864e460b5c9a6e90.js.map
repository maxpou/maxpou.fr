{"version":3,"file":"component---src-templates-blog-list-template-js-4b6c864e460b5c9a6e90.js","mappings":"kOAIA,MAAMA,EAAoBC,EAAAA,QAAOC,IAAGC,WAAA,CAAAC,YAAA,gCAAAC,YAAA,gBAAVJ,CAAU,qOAkB9BK,GAAUL,EAAAA,EAAAA,SAAOM,EAAAA,MAAKJ,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAZJ,CAAY,0VAqBtBO,GAAcP,EAAAA,EAAAA,SAAOK,GAAQH,WAAA,CAAAC,YAAA,0BAAAC,YAAA,gBAAfJ,CAAe,gDAO7BQ,GAAUR,EAAAA,EAAAA,SAAOK,GAAQH,WAAA,CAAAC,YAAA,sBAAAC,YAAA,gBAAfJ,CAAe,cAIzBS,EAAST,EAAAA,QAAOU,KAAIR,WAAA,CAAAC,YAAA,qBAAAC,YAAA,gBAAXJ,CAAW,mJAyBpBW,EAAWX,EAAAA,QAAOU,KAAIR,WAAA,CAAAC,YAAA,uBAAAC,YAAA,gBAAXJ,CAAW,8DAgC5B,MAxBA,SAAmBY,GAA4B,IAA3B,YAAEC,EAAW,QAAEC,GAASF,EAC1C,MAAMG,EAA8B,IAAhBF,EAAoB,IAAG,WAAaA,EAAc,GAEtE,OACEG,EAAAA,cAACjB,EAAiB,KACC,IAAhBc,EACCG,EAAAA,cAACT,EAAW,CAACU,GAAIF,GAAa,iBAE9BC,EAAAA,cAACP,EAAM,CAACS,UAAU,aAGpBF,EAAAA,cAACL,EAAQ,KAAC,QACFE,EAAY,OAAKC,GAGxBD,EAAcC,EACbE,EAAAA,cAACR,EAAO,CAACS,GAAE,WAAYJ,EAAc,IAAK,iBAE1CG,EAAAA,cAACP,EAAM,CAACS,UAAU,SAI1B,E,UC1EA,MAzBA,SAAiBN,GAAmC,IAAlC,KAAEO,EAAI,YAAEC,EAAW,SAAEC,GAAUT,EAC/C,MAAM,MAAEU,EAAK,YAAEC,GAAgBJ,EAAKK,KAAKC,aACnCC,EAAQP,EAAKO,MAAMC,MAEzB,OACEX,EAAAA,cAACY,EAAAA,EAAM,CAACP,SAAUA,GAChBL,EAAAA,cAACa,EAAAA,EAAG,CACFC,WACEX,EAAKW,WAAWC,gBAAgBC,gBAAgBC,OAAOC,SAASC,MAGpEnB,EAAAA,cAACoB,EAAAA,EAAI,CAACd,MAAOA,EAAOe,SAAUd,IAE9BP,EAAAA,cAACsB,EAAAA,EAAO,KACNtB,EAAAA,cAACuB,EAAAA,EAAS,CAACb,MAAOA,KAGpBV,EAAAA,cAACwB,EAAU,CACT1B,QAASM,EAAYN,QACrBD,YAAaO,EAAYP,cAIjC,C","sources":["webpack://maxpou.fr/./src/components/Pagination.js","webpack://maxpou.fr/./src/templates/blog-list-template.js"],"sourcesContent":["import React from 'react'\nimport { Link } from 'gatsby'\nimport styled from 'styled-components'\n\nconst PaginationWrapper = styled.nav`\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: center;\n  align-items: center;\n  margin-top: 4em;\n  justify-content: space-between;\n  width: 80%;\n  max-width: 770px;\n  padding: 25px 0;\n  margin: 0px auto;\n\n  @media (max-width: 780px) {\n    width: 90%;\n    padding: 25px 0;\n  }\n`\n\nconst PageBtn = styled(Link)`\n  border-radius: 3px;\n  background-color: var(--color-primary);\n  border: 1px solid var(--color-primary);\n  color: var(--color-white);\n  padding: 8px 20px;\n  min-width: 130px;\n  transition: background 0s;\n\n  &:hover {\n    background-color: var(--color-white);\n    color: var(--color-primary);\n    border: 1px solid var(--color-primary);\n  }\n\n  @media (max-width: 564px) {\n    margin-top: 10px;\n    width: 100%;\n  }\n`\n\nconst PreviousBtn = styled(PageBtn)`\n  order: 1;\n  @media (max-width: 564px) {\n    order: 2;\n  }\n`\n\nconst NextBtn = styled(PageBtn)`\n  order: 3;\n`\n\nconst Spacer = styled.span`\n  display: block;\n  min-width: 130px;\n\n  &.previous {\n    order: 1;\n  }\n\n  &.next {\n    order: 3;\n  }\n\n  @media (max-width: 564px) {\n    display: none;\n\n    &.previous {\n      order: 2;\n    }\n\n    &.next {\n      order: 3;\n    }\n  }\n`\n\nconst PageInfo = styled.span`\n  order: 2;\n  padding: 1em 0;\n  @media (max-width: 564px) {\n    order: 1;\n  }\n`\n\nfunction Pagination({ currentPage, nbPages }) {\n  const previousUrl = currentPage === 2 ? '/' : `/pages/${currentPage - 1}`\n\n  return (\n    <PaginationWrapper>\n      {currentPage !== 1 ? (\n        <PreviousBtn to={previousUrl}>‹ Newer posts</PreviousBtn>\n      ) : (\n        <Spacer className=\"previous\" />\n      )}\n\n      <PageInfo>\n        Page {currentPage} of {nbPages}\n      </PageInfo>\n\n      {currentPage < nbPages ? (\n        <NextBtn to={`/pages/${currentPage + 1}`}>Older posts ›</NextBtn>\n      ) : (\n        <Spacer className=\"next\" />\n      )}\n    </PaginationWrapper>\n  )\n}\n\nexport default Pagination\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/Layout'\nimport Wrapper from '../components/Wrapper'\nimport Hero from '../components/Hero'\nimport PostsList from '../components/PostsList'\nimport Pagination from '../components/Pagination'\nimport SEO from '../components/SEO'\n\nfunction BlogList({ data, pageContext, location }) {\n  const { title, description } = data.site.siteMetadata\n  const posts = data.posts.edges\n\n  return (\n    <Layout location={location}>\n      <SEO\n        imageShare={\n          data.imageShare.childImageSharp.gatsbyImageData.images.fallback.src\n        }\n      />\n      <Hero title={title} subTitle={description} />\n\n      <Wrapper>\n        <PostsList posts={posts} />\n      </Wrapper>\n\n      <Pagination\n        nbPages={pageContext.nbPages}\n        currentPage={pageContext.currentPage}\n      />\n    </Layout>\n  )\n}\n\nexport default BlogList\n\nexport const pageQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    site {\n      siteMetadata {\n        title\n        description\n      }\n    }\n    imageShare: file(relativePath: { eq: \"cover.jpg\" }) {\n      childImageSharp {\n        gatsbyImageData\n      }\n    }\n    posts: allMdx(\n      sort: { frontmatter: { date: DESC } }\n      filter: {\n        internal: { contentFilePath: { regex: \"//content/posts//\" } }\n        frontmatter: { published: { ne: false }, unlisted: { ne: true } }\n      }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          excerpt\n          fields {\n            timeToRead {\n              text\n            }\n          }\n          frontmatter {\n            title\n            tags\n            language\n            slug\n          }\n        }\n      }\n    }\n  }\n`\n"],"names":["PaginationWrapper","styled","nav","withConfig","displayName","componentId","PageBtn","Link","PreviousBtn","NextBtn","Spacer","span","PageInfo","_ref","currentPage","nbPages","previousUrl","React","to","className","data","pageContext","location","title","description","site","siteMetadata","posts","edges","Layout","SEO","imageShare","childImageSharp","gatsbyImageData","images","fallback","src","Hero","subTitle","Wrapper","PostsList","Pagination"],"sourceRoot":""}